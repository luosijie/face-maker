<template>
  <view class="menu-text">
      <input
        value="{{ activeElement.data }}" 
        type="text"
        class="input-text"
        placeholder="请输入文字" 
        wx:if="{{ activeIndex }}"
        bindblur="textChange"
      />
      <view class="input-text" wx:else bindtap="addText">添加文字</view>
      <view class="item">
        <view class="label">透明度</view>
        <view class="content">
          <slider
            bindchange="opacityChange"
            show-value
            backgroundColor="#eee"
            activeColor="#ccc"
            value="{{ opacity }}"
            min="0"
            max="1"
            step="0.1"
          />
        </view>
      </view>
      <view class="item">
        <view class="label">颜色</view>
        <view class="content colors">
          <view
            bindtap="fillStyleChange(item)"
            class="color"
            wx:class="{{ {active: fillStyle === item} }}"
            wx:for="{{colors}}"
            wx:key="item"
            wx:style="{{{background: item}}}"
          />
        </view>
      </view>
      <view class="item">
        <view class="label">描边</view>
        <view class="content colors">
          <view
            bindtap="strokeStyleChange(item)"
            class="color"
            wx:class="{{ {active: strokeStyle === item} }}"
            wx:for="{{ colors }}"
            wx:key="item"
            wx:style="{{ {background: item} }}"
          />
        </view>
      </view>
  </view>
</template>

<script>
import { createComponent } from '@mpxjs/core'
import store from '../store'

createComponent({
  data: {
    colors: ['#000000', '#ffffff', '#0076B6', '#00A948', '#FFB500', '#FF2929']
  },
  computed: {
    activeElement() {
      return store.state.elements[store.state.activeIndex]
    },
    activeIndex() {
      return store.state.activeIndex
    },
    opacity() {
      return this.activeIndex ? this.activeElement.opacity : store.state.fontStyle.opacity
    },
    fillStyle() {
      return this.activeIndex ? this.activeElement.fillStyle : store.state.fontStyle.fillStyle
    },
    strokeStyle() {
      return this.activeIndex ? this.activeElement.strokeStyle : store.state.fontStyle.strokeStyle
    }
  },
  methods: {
    textChange(e) {
      const text = e.detail.value || '请输入文字'
      console.log('text-change', e)
      const elements =  store.state.elements.slice()
      elements[store.state.activeIndex].data = text
      store.commit('setElements', elements)
    },
    addText() {
      const background = store.state.elements.find(e => e.type === 'background')
      if (!background) {
        wx.showToast({
          title: '请先选择背景图',
          icon: 'none'
        })
        return
      }
      store.commit('addText')
    },
    opacityChange(e) {
      store.commit('setFontStyle', { key: 'opacity', data: e.detail.value })
      if (this.activeIndex) {
        const elements =  store.state.elements.slice()
        elements[this.activeIndex].opacity = e.detail.value
        store.commit('setElements', elements)
      }
    },
    fillStyleChange(e) {
      store.commit('setFontStyle', { key: 'fillStyle', data: e })
      if (this.activeIndex) {
        const elements =  store.state.elements.slice()
        elements[this.activeIndex].fillStyle = e
        store.commit('setElements', elements)
      }
    },
    strokeStyleChange(e) {
      store.commit('setFontStyle', { key: 'strokeStyle', data: e })
      if (this.activeIndex) {
        const elements =  store.state.elements.slice()
        elements[this.activeIndex].strokeStyle = e
        store.commit('setElements', elements)
      }
    }
  },
  ready() {
    // this.initCanvas()
  }
})
</script>

<style lang="stylus">
.menu-text
  display flex
  flex-direction column
  justify-content center
  height 100%
  position relative
  padding 0 20rpx
  
  .input-text
    box-sizing border-box
    text-align center
    width 100%
    font-size 40rpx
    margin-bottom 20rpx
    font-weight bold
    color #999
    border 1rpx dashed #ccc
    border-radius 5rpx
    padding 10rpx
    height 90rpx

  .item
    height 80rpx
    display flex
    align-items center
    width 100%

    .label
      color #1E3063
      font-size 28rpx
      font-weight bold
      width 120rpx
    
    .content
      width calc(100% - 120rpx)
    
    .colors
      padding 0 10rpx
      display flex
      justify-content space-between
      
      .color
        box-sizing border-box
        width 48rpx
        height 48rpx
        border-radius 50%
        border 4rpx solid #eee

      .active 
        border-color #1E3063
</style>

<script type="application/json">
  {
    "component": true
  }
</script>
