<template>
  <view class="playboard">
    <image class="icon-add" src="../assets/images/icon-add-image.png" alt="添加图片"/>
    <canvas
      type="2d"
      id="canvas"
      class="canvas"
      bindtouchstart="touchstart"
      bindtouchmove="touchmove"
      bindtouchend="touchend"
    />
  </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'
  import store from '../store'
  import example from '../assets/images/example.jpeg'

  createComponent({
    data: {
      startPos: {
        x: 0,
        y: 0
      }
    },
    computed: {
      ctx () {
        return store.state.ctx
      },
      elements () {
        return store.state.elements
      }
    },
    watch: {
      elements () {
        // console.log('canvas change', this.elements)
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height)
        this.elements.forEach(ele => {
          if (ele.type === 'rect') {
            console.log(ele.sx, ele.sy)
            this.ctx.fillRect(ele.sx, ele.sy, ele.ex, ele.ey)
          }
          if (ele.type === 'image') {
            this.ctx.drawImage(ele.data, ele.left, 0, ele.width, ele.height)
            this.ctx.save()
          }
        })
      }
    },
    methods: {
      touchstart (e) {
        this.startPos.x = e.touches[0].x
        this.startPos.y = e.touches[0].y
        console.log('touch-start', e, this.startPos)
      },
      touchmove (e) {
        // this.ctx.restore()
        // this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height)
        const x = e.touches[0].x
        const y = e.touches[0].y
        const data = {
          type: 'rect',
          sx: this.startPos.x,
          sy: this.startPos.y,
          ex: x - this.startPos.x,
          ey: y - this.startPos.y
        }
        const elements = store.state.elements
        const index = elements.findIndex(e => {
          return e.type === 'rect'
        })
        if (index > -1) {
          elements.splice(index, 1)
        }
        elements.push(data)
      },
      touchend (e) {
        console.log('touch-end', e)
      },
      initCanvas () {
        const query = this.createSelectorQuery()
        query.select('#canvas')
          .fields({ node: true, size: true })
          .exec((res) => {
            const canvas = res[0].node
            const ctx = canvas.getContext('2d')
            store.commit('setCtx', ctx)

            const dpr = wx.getSystemInfoSync().pixelRatio
            canvas.width = res[0].width * dpr
            canvas.height = res[0].height * dpr
            ctx.scale(dpr, dpr)

            // 初始化一张背景图
            const img = canvas.createImage()
            img.src = example
            img.onload = e => {
              // console.log('img loaded', e.path[0].width. e.pa)
              const cWidth = canvas.width / dpr
              const cHeight = canvas.height / dpr
              const rate = e.path[0].height / cHeight
              const width = e.path[0].width / rate
              const left = (cWidth - width) / 2
              const elements = store.state.elements
              const data = {
                type: 'image',
                data: img,
                left: left,
                top: 0,
                width: width,
                height: cHeight
              }
              elements.push(data)
              store.commit('setElements', elements)
            }
          })
      }
    },
    ready () {
      this.initCanvas()
    }
  })
</script>

<style lang="stylus">
  .playboard
    position relative
    width 100vw
    height 100vw
    background #f8f8f8

  .canvas 
    width 100vw
    height 100vw
  
  .icon-add 
    position absolute
    width 160rpx
    height 160rpx
    left 50%
    top 50%
    margin-top -80rpx
    margin-left -80rpx
</style>

<script type="application/json">
  {
    "component": true
  }
</script>
