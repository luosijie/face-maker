{"version":3,"sources":["webpack:///./src/miniprogram/components/menu-background.mpx?43f4","webpack:///./src/miniprogram/components/menu-background.mpx","webpack:///./node_modules/@babel/runtime-corejs3/core-js-stable/instance/find-index.js","webpack:///./node_modules/core-js-pure/stable/instance/find-index.js","webpack:///./node_modules/core-js-pure/es/instance/find-index.js","webpack:///./node_modules/core-js-pure/es/array/virtual/find-index.js","webpack:///./node_modules/core-js-pure/modules/es.array.find-index.js","webpack:///./src/miniprogram/utils/compress.js","webpack:///./src/miniprogram/components/menu-background.mpx?536d","webpack:///./src/miniprogram/components/menu-background.mpx?df11","webpack:///./src/miniprogram/components/menu-background.mpx?49e1"],"names":["image","canvasId","config","maxWidth","maxHeight","_this","resolve","reject","width","height","ratio","dpr","wx","getSystemInfoSync","pixelRatio","canvasCompress","query","createSelectorQuery","select","fields","node","size","exec","res","canvas","ctx","getContext","scale","drawImage","canvasToTempFilePath","x","y","destWidth","destHeight","complete","errMsg","tempFilePath","fail","err"],"mappings":"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","file":"components/menu-background0814934a/menu-background.js","sourcesContent":["global.currentModuleId\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=script&index=0!./menu-background.mpx\"\n\n/* styles */\nrequire(\"!!../../../node_modules/@mpxjs/webpack-plugin/lib/extractor?type=styles&index=0!../../../node_modules/@mpxjs/webpack-plugin/lib/wxss/loader?sourceMap&root=&importLoaders=1&extract=true!../../../node_modules/@mpxjs/webpack-plugin/lib/style-compiler/index?{\\\"moduleId\\\":\\\"m6182d117\\\",\\\"scoped\\\":false,\\\"sourceMap\\\":true}!stylus-loader!../../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=styles&index=0!./menu-background.mpx\")\n\n/* json */\nrequire(\"!!../../../node_modules/@mpxjs/webpack-plugin/lib/extractor?type=json&index=0!../../../node_modules/@mpxjs/webpack-plugin/lib/json-compiler/index?root=!../../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=json&index=0!./menu-background.mpx\")\n\n/* template */\nrequire(\"!!../../../node_modules/@mpxjs/webpack-plugin/lib/extractor?type=template&index=0!../../../node_modules/@mpxjs/webpack-plugin/lib/wxml/wxml-loader?root=!../../../node_modules/@mpxjs/webpack-plugin/lib/template-compiler/index?{\\\"usingComponents\\\":[],\\\"hasScoped\\\":false,\\\"isNative\\\":false,\\\"moduleId\\\":\\\"m6182d117\\\",\\\"projectRoot\\\":\\\"\\\"}!../../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=template&index=0!./menu-background.mpx\")\n\n","<template>\n  <view class=\"menu-background\">\n    <view class=\"item replace\" bindtap=\"chooseImage\">\n      <i class=\"iconfont icon-image\"></i>\n      <text class=\"title\">图片</text>\n      <text class=\"sub-title\">图片仅供本地使用</text>\n    </view>\n    <canvas\n      type=\"2d\"\n      id=\"canvas_compress\"\n      class=\"canvas-compress\"\n      style=\"width: {{canvasCompress.width}}px; height: {{canvasCompress.height}}px\"\n    />\n  </view>\n</template>\n\n<script>\nimport { createComponent } from '@mpxjs/core'\nimport store from '../store'\nimport loadImage from '../utils/loadImage'\nimport compress from '../utils/compress'\n\ncreateComponent({\n  data: {\n    canvasCompress: {\n      width: 0,\n      height: 0,\n    }\n  },\n  computed: {\n    canvas() {\n      return store.state.canvas\n    },\n    ctx() {\n      return store.state.ctx\n    },\n    elements() {\n      return store.state.elements\n    },\n    dpr() {\n      return wx.getSystemInfoSync().pixelRatio\n    }\n  },\n  methods: {\n    chooseImage() {\n      wx.chooseImage({\n        count: 1,\n        sizeType: ['original', 'compressed'],\n        sourceType: ['album', 'camera'],\n        success: async res => {\n          if (res.errMsg === 'chooseImage:ok') {\n            const path = res.tempFilePaths[0]\n            console.log('image from chooseImage', res)\n            const image = await loadImage(path, this.canvas)\n            const filePath = await compress.call(this, image, 'canvas_compress')\n            console.log('filesssss', filePath)\n            // wx.cloud.callFunction({\n            //   name: 'checkImage',\n            //   data: {\n            //     media: {\n            //       contentType: 'image/png',\n            //       value: file.data\n            //     }\n            //   },\n            //   success(res) {\n            //     console.log('res from cloud', res)\n            //   },\n            //   fail: console.error\n            // })\n            // const type = path.match(/[^.]*$/)[0]\n            wx.cloud.uploadFile({\n              cloudPath: `${new Date().getTime()}.png`,\n              filePath: filePath,\n              success(res) {\n                wx.cloud.callFunction({\n                  name: 'checkImage',\n                  data: {\n                    fileID: res.fileID\n                  },\n                  success(res) {\n                    console.log('res from cloud', res)\n                  },\n                  fail: console.error\n                })\n              },\n              fail: console.error\n            })\n            const cWidth = this.canvas.width / this.dpr\n            const cHeight = this.canvas.height / this.dpr\n            const data = {\n              type: 'background',\n              data: image,\n              left: 0,\n              top: 0,\n              width: 0,\n              height: 0,\n              scale: 1,\n              rotate: 0\n            }\n            if (image.height > image.width) {\n              // 图片高大于宽\n              const rate = image.height / cHeight\n              data.width = image.width / rate\n              data.height = cHeight\n              data.left = (cWidth - data.width) / 2\n              data.top = 0\n            } else {\n              // 图片宽大于高\n              const rate = image.width / cWidth\n              data.height = image.height / rate\n              data.width = cWidth\n              data.left = 0\n              data.top = (cHeight - data.height) / 2\n            }\n            const index = this.elements.findIndex(e => e.type === 'background')\n            // if (index > -1) {\n            //   this.elements.splice(index, 1, data)\n            // } else {\n            //   this.elements.unshift(data)\n            // }\n          }\n        }\n      })\n    }\n  },\n  ready() {\n    // this.initCanvas()\n  }\n})\n</script>\n\n<style lang=\"stylus\">\n@import url('../assets/iconfont/iconfont.css')\n\n.menu-background\n  display flex\n  justify-content center\n  align-items center\n  height 100%\n  position relative\n  padding 20rpx\n  .item\n    color #666\n    font-size 28rpx\n    margin 10rpx\n  .replace\n    display flex\n    flex-direction column\n    align-items center\n    color #999\n    i\n      font-size 80rpx\n    text.title\n      font-size 24rpx\n      font-weight bold\n    text.sub-title\n      margin-top 20rpx\n      font-size 20rpx\n  .canvas-compress\n    position fixed\n    background red\n    left 0\n    top 0\n    z-index 0\n</style>\n\n<script type=\"application/json\">\n  {\n    \"component\": true\n  }\n</script>\n","module.exports = require(\"core-js-pure/stable/instance/find-index\");","var parent = require('../../es/instance/find-index');\n\nmodule.exports = parent;\n","var findIndex = require('../array/virtual/find-index');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.findIndex;\n  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.findIndex) ? findIndex : own;\n};\n","require('../../../modules/es.array.find-index');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').findIndex;\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","export default function (image, canvasId, config = { maxWidth: 750, maxHeight: 1334 }) {\n  const _this = this\n  return new Promise((resolve, reject) => {\n    let width = image.width\n    let height = image.height\n    if (width > config.maxWidth) {\n      const ratio = width / config.maxWidth\n      width = config.maxWidth\n      height = height / ratio\n    }\n    if (height > config.maxHeight) {\n      const ratio = height / config.maxHeight\n      height = config.maxHeight\n      width = width / ratio\n    }\n    const dpr = wx.getSystemInfoSync().pixelRatio\n    _this.canvasCompress.width = width\n    _this.canvasCompress.height = height\n    const query = this.createSelectorQuery()\n    query\n      .select(`#${canvasId}`)\n      .fields({ node: true, size: true })\n      .exec(async res => {\n        const canvas = res[0].node\n        const ctx = canvas.getContext('2d')\n        canvas.width = width * dpr\n        canvas.height = height * dpr\n        ctx.scale(dpr, dpr)\n        // console.log('canvas-width-height', res[0].width, res[0].height)\n        ctx.drawImage(image, 0, 0, width, height)\n        wx.canvasToTempFilePath({\n          canvas,\n          x: 0,\n          y: 0,\n          destWidth: width,\n          destHeight: height,\n          complete (res) {\n            if (res.errMsg === 'canvasToTempFilePath:ok') {\n              resolve(res.tempFilePath)\n              // wx.getFileSystemManager().readFile({\n              //   filePath: res.tempFilePath,\n              //   success (file) {\n              //     resolve(file)\n              //   },\n              //   fail (err) {\n              //     reject(err)\n              //   }\n              // })\n            }\n          },\n          fail(err) {\n            reject(err)\n          }\n        })\n      })\n  })\n}\n","// removed by extractor","// removed by extractor","// removed by extractor"],"sourceRoot":""}