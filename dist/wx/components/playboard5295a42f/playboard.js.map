{"version":3,"sources":["webpack:///./src/components/playboard.mpx?115f","webpack:///./src/components/playboard.mpx","webpack:///./src/components/playboard.mpx?0e87","webpack:///./src/components/playboard.mpx?f257","webpack:///./src/components/playboard.mpx?0b8c","webpack:///./src/store/index.js","webpack:///./src/assets/images/example.jpeg","webpack:///./node_modules/@babel/runtime-corejs3/core-js-stable/instance/find-index.js","webpack:///./node_modules/core-js-pure/stable/instance/find-index.js","webpack:///./node_modules/core-js-pure/es/instance/find-index.js","webpack:///./node_modules/core-js-pure/es/array/virtual/find-index.js","webpack:///./node_modules/core-js-pure/modules/es.array.find-index.js"],"names":["store","createStore","state","ctx","elements","mutations","setCtx","data","setElements","eles"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACyI;;AAEzI;AACA,mBAAO,CAAC,GAAgb;;AAExb;AACA,mBAAO,CAAC,GAA4P;;AAEpQ;AACA,mBAAO,CAAC,GAAsb;;;;;;;;;;;;;;;;;;;;;;;;;ACI9b;AACA;AACA;AAEA;AACA;AACA;AACA,UADA;AAEA;AAFA;AADA,GADA;AAOA;AACA;AACA;AACA,KAHA;;AAIA;AACA;AACA;;AANA,GAPA;AAeA;AACA;AAAA;AAAA;;AACA;AACA;;AACA,MAAM,+GAAN;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA,OATA;AAUA;;AAdA,GAfA;AA+BA;AACA;AACA;AACA;AACA;AACA,KALA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA,oBADA;AAEA,2BAFA;AAGA,2BAHA;AAIA,+BAJA;AAKA;AALA;AAOA;;AACA;AACA;AACA,OAFA;;AAGA;AACA,QAAQ,6FAAR;AACA;;AACA;AACA,KA1BA;;AA2BA;AACA;AACA,KA7BA;;AA8BA;AACA;AACA,8BACA,MADA,CACA;AAAA;AAAA;AAAA,OADA,EAEA,IAFA,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,4BARA,CAUA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBADA;AAEA,qBAFA;AAGA,sBAHA;AAIA,kBAJA;AAKA,wBALA;AAMA;AANA;AAQA;AACA;AACA,SAlBA;AAmBA,OAlCA;AAmCA;;AAnEA,GA/BA;;AAoGA;AACA;AACA;;AAtGA,G;;;;;;;ACnBA,uB;;;;;;;ACAA,uB;;;;;;;ACAA,uB;;;;;;;;ACAA;AAAA;AAAA;AAEA,IAAMA,KAAK,GAAGC,+DAAW,CAAC;AACxBC,OAAK,EAAE;AACLC,OAAG,EAAE,IADA;AAELC,YAAQ,EAAE;AAFL,GADiB;AAKxBC,WAAS,EAAE;AACTC,UAAM,CAAEJ,KAAF,EAASK,IAAT,EAAe;AACnBL,WAAK,CAACC,GAAN,GAAYI,IAAZ;AACD,KAHQ;;AAITC,eAAW,CAAEN,KAAF,EAASK,IAAT,EAAe;AACxBL,WAAK,CAACO,IAAN,GAAaF,IAAb;AACD;;AANQ;AALa,CAAD,CAAzB;AAeeP,oEAAf,E;;;;;;;ACjBA,iBAAiB,qBAAuB,sD;;;;;;;ACAxC,iBAAiB,mBAAO,CAAC,GAAyC,E;;;;;;;ACAlE,aAAa,mBAAO,CAAC,GAA8B;;AAEnD;;;;;;;;ACFA,gBAAgB,mBAAO,CAAC,GAA6B;;AAErD;;AAEA;AACA;AACA;AACA;;;;;;;;ACPA,mBAAO,CAAC,GAAsC;AAC9C,mBAAmB,mBAAO,CAAC,GAAkC;;AAE7D;;;;;;;;;ACHa;AACb,QAAQ,mBAAO,CAAC,EAAqB;AACrC,iBAAiB,mBAAO,CAAC,EAA8B;AACvD,uBAAuB,mBAAO,CAAC,EAAiC;AAChE,8BAA8B,mBAAO,CAAC,GAA0C;;AAEhF;AACA;;AAEA;;AAEA;AACA,wDAAwD,qBAAqB,EAAE;;AAE/E;AACA;AACA,GAAG,uEAAuE;AAC1E;AACA;AACA;AACA,CAAC;;AAED;AACA","file":"components/playboard5295a42f/playboard.js","sourcesContent":["global.currentModuleId\n/* script */\nexport * from \"!!babel-loader!../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=script&index=0!./playboard.mpx?packageName=main\"\n\n/* styles */\nrequire(\"!!../../node_modules/@mpxjs/webpack-plugin/lib/extractor?type=styles&index=0!../../node_modules/@mpxjs/webpack-plugin/lib/wxss/loader?sourceMap&root=&importLoaders=1&extract=true!../../node_modules/@mpxjs/webpack-plugin/lib/style-compiler/index?{\\\"moduleId\\\":\\\"maaae044e\\\",\\\"scoped\\\":false,\\\"sourceMap\\\":true}!stylus-loader!../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=styles&index=0!./playboard.mpx?packageName=main\")\n\n/* json */\nrequire(\"!!../../node_modules/@mpxjs/webpack-plugin/lib/extractor?type=json&index=0!../../node_modules/@mpxjs/webpack-plugin/lib/json-compiler/index?root=!../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=json&index=0!./playboard.mpx?packageName=main\")\n\n/* template */\nrequire(\"!!../../node_modules/@mpxjs/webpack-plugin/lib/extractor?type=template&index=0!../../node_modules/@mpxjs/webpack-plugin/lib/wxml/wxml-loader?root=!../../node_modules/@mpxjs/webpack-plugin/lib/template-compiler/index?{\\\"usingComponents\\\":[],\\\"hasScoped\\\":false,\\\"isNative\\\":false,\\\"moduleId\\\":\\\"maaae044e\\\",\\\"projectRoot\\\":\\\"\\\"}!../../node_modules/@mpxjs/webpack-plugin/lib/selector?type=template&index=0!./playboard.mpx?packageName=main\")\n\n","<template>\n  <view class=\"playboard\">\n    <image class=\"icon-add\" src=\"../assets/images/icon-add-image.png\" alt=\"添加图片\"/>\n    <canvas\n      type=\"2d\"\n      id=\"canvas\"\n      class=\"canvas\"\n      bindtouchstart=\"touchstart\"\n      bindtouchmove=\"touchmove\"\n      bindtouchend=\"touchend\"\n    />\n  </view>\n</template>\n\n<script>\n  import { createComponent } from '@mpxjs/core'\n  import store from '../store'\n  import example from '../assets/images/example.jpeg'\n\n  createComponent({\n    data: {\n      startPos: {\n        x: 0,\n        y: 0\n      }\n    },\n    computed: {\n      ctx () {\n        return store.state.ctx\n      },\n      elements () {\n        return store.state.elements\n      }\n    },\n    watch: {\n      elements () {\n        // console.log('canvas change', this.elements)\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height)\n        this.elements.forEach(ele => {\n          if (ele.type === 'rect') {\n            console.log(ele.sx, ele.sy)\n            this.ctx.fillRect(ele.sx, ele.sy, ele.ex, ele.ey)\n          }\n          if (ele.type === 'image') {\n            this.ctx.drawImage(ele.data, ele.left, 0, ele.width, ele.height)\n            this.ctx.save()\n          }\n        })\n      }\n    },\n    methods: {\n      touchstart (e) {\n        this.startPos.x = e.touches[0].x\n        this.startPos.y = e.touches[0].y\n        console.log('touch-start', e, this.startPos)\n      },\n      touchmove (e) {\n        // this.ctx.restore()\n        // this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height)\n        const x = e.touches[0].x\n        const y = e.touches[0].y\n        const data = {\n          type: 'rect',\n          sx: this.startPos.x,\n          sy: this.startPos.y,\n          ex: x - this.startPos.x,\n          ey: y - this.startPos.y\n        }\n        const elements = store.state.elements\n        const index = elements.findIndex(e => {\n          return e.type === 'rect'\n        })\n        if (index > -1) {\n          elements.splice(index, 1)\n        }\n        elements.push(data)\n      },\n      touchend (e) {\n        console.log('touch-end', e)\n      },\n      initCanvas () {\n        const query = this.createSelectorQuery()\n        query.select('#canvas')\n          .fields({ node: true, size: true })\n          .exec((res) => {\n            const canvas = res[0].node\n            const ctx = canvas.getContext('2d')\n            store.commit('setCtx', ctx)\n\n            const dpr = wx.getSystemInfoSync().pixelRatio\n            canvas.width = res[0].width * dpr\n            canvas.height = res[0].height * dpr\n            ctx.scale(dpr, dpr)\n\n            // \b初始化一张背景图\n            const img = canvas.createImage()\n            img.src = example\n            img.onload = e => {\n              // console.log('img loaded', e.path[0].width. e.pa)\n              const cWidth = canvas.width / dpr\n              const cHeight = canvas.height / dpr\n              const rate = e.path[0].height / cHeight\n              const width = e.path[0].width / rate\n              const left = (cWidth - width) / 2\n              const elements = store.state.elements\n              const data = {\n                type: 'image',\n                data: img,\n                left: left,\n                top: 0,\n                width: width,\n                height: cHeight\n              }\n              elements.push(data)\n              store.commit('setElements', elements)\n            }\n          })\n      }\n    },\n    ready () {\n      this.initCanvas()\n    }\n  })\n</script>\n\n<style lang=\"stylus\">\n  .playboard\n    position relative\n    width 100vw\n    height 100vw\n    background #f8f8f8\n\n  .canvas \n    width 100vw\n    height 100vw\n  \n  .icon-add \n    position absolute\n    width 160rpx\n    height 160rpx\n    left 50%\n    top 50%\n    margin-top -80rpx\n    margin-left -80rpx\n</style>\n\n<script type=\"application/json\">\n  {\n    \"component\": true\n  }\n</script>\n","// removed by extractor","// removed by extractor","// removed by extractor","import { createStore } from '@mpxjs/core'\n\nconst store = createStore({\n  state: {\n    ctx: null,\n    elements: []\n  },\n  mutations: {\n    setCtx (state, data) {\n      state.ctx = data\n    },\n    setElements (state, data) {\n      state.eles = data\n    }\n  }\n})\n\nexport default store\n","module.exports = __webpack_public_path__ + \"img/example73295048bd4260075333211267a0584d.jpeg\";","module.exports = require(\"core-js-pure/stable/instance/find-index\");","var parent = require('../../es/instance/find-index');\n\nmodule.exports = parent;\n","var findIndex = require('../array/virtual/find-index');\n\nvar ArrayPrototype = Array.prototype;\n\nmodule.exports = function (it) {\n  var own = it.findIndex;\n  return it === ArrayPrototype || (it instanceof Array && own === ArrayPrototype.findIndex) ? findIndex : own;\n};\n","require('../../../modules/es.array.find-index');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('Array').findIndex;\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n"],"sourceRoot":""}